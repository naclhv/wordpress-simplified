version: '3'

services:
  db:
    image: ${DB_IMG}
    container_name: db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=wordpress
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db-data-temp:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network

  wordpress:
    depends_on:
      - db
    image: ${WORDPRESS_IMG}
    container_name: wordpress
    restart: unless-stopped
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wp-data-temp:/var/www/html
    networks:
      - app-network

  webserver:
    depends_on:
      - wordpress
    image: ${WEBSERVER_IMG}
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - wp-data-temp:/var/www/html
      - ./configs/nginx-conf:/etc/nginx/conf.d
      - certbot-etc-temp:/etc/letsencrypt
    networks:
      - app-network

  certbot:
    depends_on:
      - webserver
    image: ${CERTBOT_IMG}
    container_name: certbot
    volumes:
      - certbot-etc-temp:/etc/letsencrypt
      - wp-data-temp:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email ${EMAIL} --agree-tos --no-eff-email ${CERTBOT_STAGING} -d ${DOMAIN} -d www.${DOMAIN}
    #command: certonly --webroot --webroot-path=/var/www/html --email ${EMAIL} --agree-tos --no-eff-email -d ${DOMAIN} -d www.${DOMAIN}

volumes:
  certbot-etc-temp:
  wp-data-temp:
  db-data-temp:

networks:
  app-network:
    driver: bridge

